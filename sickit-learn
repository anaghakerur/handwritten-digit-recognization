import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import datasets
digits = datasets.load_digits()
print(digits.DESCR)
digits.images[0]

main_data = digits['data']
targets = digits['target']
print(len(main_data))
%matplotlib inline
def show_digit(index):
    plt.imshow(digits.images[index], cmap=plt.cm.gray_r, interpolation='nearest')
    plt.title('The digit is: '+ str(digits.target[index]))
    plt.show()
show_digit(7)

%matplotlib inline

plt.subplot(321)
plt.imshow(digits.images[1791], cmap=plt.cm.gray_r,
interpolation='nearest')

plt.subplot(322)
plt.imshow(digits.images[1792], cmap=plt.cm.gray_r,
interpolation='nearest')

plt.subplot(323)
plt.imshow(digits.images[1793], cmap=plt.cm.gray_r,
interpolation='nearest')

plt.subplot(324)
plt.imshow(digits.images[1794], cmap=plt.cm.gray_r,
interpolation='nearest')

plt.subplot(325)
plt.imshow(digits.images[1795], cmap=plt.cm.gray_r,
interpolation='nearest')

plt.subplot(326)
plt.imshow(digits.images[1796], cmap=plt.cm.gray_r,
interpolation='nearest')
from sklearn import svm
svc = svm.SVC(gamma = 0.001, C=100.)
svc.fit(main_data[:1790] , targets[:1790])
predictions = svc.predict(main_data[1791:])
predictions , targets[1791:]

from sklearn.tree import DecisionTreeClassifier
dt = DecisionTreeClassifier(criterion = 'gini')
dt.fit(main_data[:1600] , targets[:1600])
prediction2 = dt.predict(main_data[1601:])

from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix
confusion_matrix(targets[1601:], prediction2)
accuracy_score(targets[1601:], prediction2)

from sklearn.ensemble import RandomForestClassifier
rc = RandomForestClassifier(n_estimators = 150)
rc.fit(main_data[:1500], targets[:1500])
prediction3= rc.predict(main_data[1501:])
accuracy_score(targets[1501:], prediction3)
